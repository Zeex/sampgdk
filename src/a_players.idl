/* Copyright (C) 2011-2012 Zeex
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const int SPECIAL_ACTION_NONE             = 0;
const int SPECIAL_ACTION_DUCK             = 1;
const int SPECIAL_ACTION_USEJETPACK       = 2;
const int SPECIAL_ACTION_ENTER_VEHICLE    = 3;
const int SPECIAL_ACTION_EXIT_VEHICLE     = 4;
const int SPECIAL_ACTION_DANCE1           = 5;
const int SPECIAL_ACTION_DANCE2           = 6;
const int SPECIAL_ACTION_DANCE3           = 7;
const int SPECIAL_ACTION_DANCE4           = 8;
const int SPECIAL_ACTION_HANDSUP          = 10;
const int SPECIAL_ACTION_USECELLPHONE     = 11;
const int SPECIAL_ACTION_SITTING          = 12;
const int SPECIAL_ACTION_STOPUSECELLPHONE = 13;
const int SPECIAL_ACTION_DRINK_BEER       = 20;
const int SPECIAL_ACTION_SMOKE_CIGGY      = 21;
const int SPECIAL_ACTION_DRINK_WINE       = 22;
const int SPECIAL_ACTION_DRINK_SPRUNK     = 23;
const int SPECIAL_ACTION_CUFFED           = 24;
const int SPECIAL_ACTION_CARRY		  = 25;

const int FIGHT_STYLE_NORMAL   = 4;
const int FIGHT_STYLE_BOXING   = 5;
const int FIGHT_STYLE_KUNGFU   = 6;
const int FIGHT_STYLE_KNEEHEAD = 7;
const int FIGHT_STYLE_GRABKICK = 15;
const int FIGHT_STYLE_ELBOW    = 16;

const int WEAPONSKILL_PISTOL          = 0;
const int WEAPONSKILL_PISTOL_SILENCED = 1;
const int WEAPONSKILL_DESERT_EAGLE    = 2;
const int WEAPONSKILL_SHOTGUN         = 3;
const int WEAPONSKILL_SAWNOFF_SHOTGUN = 4;
const int WEAPONSKILL_SPAS12_SHOTGUN  = 5;
const int WEAPONSKILL_MICRO_UZI       = 6;
const int WEAPONSKILL_MP5             = 7;
const int WEAPONSKILL_AK47            = 8;
const int WEAPONSKILL_M4              = 9;
const int WEAPONSKILL_SNIPERRIFLE     = 10;

const int WEAPONSTATE_UNKNOWN      = -1;
const int WEAPONSTATE_NO_BULLETS   =  0;
const int WEAPONSTATE_LAST_BULLET  =  1;
const int WEAPONSTATE_MORE_BULLETS =  2;
const int WEAPONSTATE_RELOADING    =  3;

[native] bool SetSpawnInfo([in] int playerid, [in] int team, [in] int skin, [in] float x, [in] float y, [in] float z, [in] float rotation, [in] int weapon1, [in] int weapon1_ammo, [in] int weapon2, [in] int weapon2_ammo, [in] int weapon3, [in] int weapon3_ammo);
[native] bool SpawnPlayer([in] int playerid);

[native] bool SetPlayerPos([in] int playerid, [in] float x, [in] float y, [in] float z);
[native] bool SetPlayerPosFindZ([in] int playerid, [in] float x, [in] float y, [in] float z);
[native] bool GetPlayerPos([in] int playerid, [out] float x, [out] float y, [out] float z);
[native] bool SetPlayerFacingAngle([in] int playerid, [in] float angle);
[native] bool GetPlayerFacingAngle([in] int playerid, [out] float angle);
[native] bool IsPlayerInRangeOfPoint([in] int playerid, [in] float range, [in] float x, [in] float y, [in] float z);
[native] float GetPlayerDistanceFromPoint([in] int playerid, [in] float x, [in] float y, [in] float z);
[native] bool IsPlayerStreamedIn([in] int playerid, [in] int forplayerid);
[native] bool SetPlayerInterior([in] int playerid, [in] int interiorid);
[native] int GetPlayerInterior([in] int playerid);
[native] bool SetPlayerHealth([in] int playerid, [in] float health);
[native] bool GetPlayerHealth([in] int playerid, [out] float health);
[native] bool SetPlayerArmour([in] int playerid, [in] float armour);
[native] bool GetPlayerArmour([in] int playerid, [out] float armour);
[native] bool SetPlayerAmmo([in] int playerid, [in] int weaponslot, [in] int ammo);
[native] int GetPlayerAmmo([in] int playerid);
[native] int GetPlayerWeaponState([in] int playerid);
[native] int GetPlayerTargetPlayer([in] int playerid);
[native] bool SetPlayerTeam([in] int playerid, [in] int teamid);
[native] int GetPlayerTeam([in] int playerid);
[native] bool SetPlayerScore([in] int playerid, [in] int score);
[native] int GetPlayerScore([in] int playerid);
[native] int GetPlayerDrunkLevel([in] int playerid);
[native] bool SetPlayerDrunkLevel([in] int playerid, [in] int level);
[native] bool SetPlayerColor([in] int playerid, [in] int color);
[native] int GetPlayerColor([in] int playerid);
[native] bool SetPlayerSkin([in] int playerid, [in] int skinid);
[native] int GetPlayerSkin([in] int playerid);
[native] bool GivePlayerWeapon([in] int playerid, [in] int weaponid, [in] int ammo);
[native] bool ResetPlayerWeapons([in] int playerid);
[native] bool SetPlayerArmedWeapon([in] int playerid, [in] int weaponid);
[native] bool GetPlayerWeaponData([in] int playerid, [in] int slot, [out] int weapon, [out] int ammo);
[native] bool GivePlayerMoney([in] int playerid, [in] int money);
[native] bool ResetPlayerMoney([in] int playerid);
[native] int SetPlayerName([in] int playerid, [in] string name);
[native] int GetPlayerMoney([in] int playerid);
[native] int GetPlayerState([in] int playerid);
[native] bool GetPlayerIp([in] int playerid, [out] char ip, [in] int size);
[native] int GetPlayerPing([in] int playerid);
[native] int GetPlayerWeapon([in] int playerid);
[native] bool GetPlayerKeys([in] int playerid, [out] int keys, [out] int updown, [out] int leftright);
[native] bool GetPlayerName([in] int playerid, [out] char name, [in] int size);
[native] bool SetPlayerTime([in] int playerid, [in] int hour, [in] int minute);
[native] bool GetPlayerTime([in] int playerid, [out] int hour, [out] int minute);
[native] bool TogglePlayerClock([in] int playerid, [in] bool toggle);
[native] bool SetPlayerWeather([in] int playerid, [in] int weather);
[native] bool ForceClassSelection([in] int playerid);
[native] bool SetPlayerWantedLevel([in] int playerid, [in] int level);
[native] int GetPlayerWantedLevel([in] int playerid);
[native] bool SetPlayerFightingStyle([in] int playerid, [in] int style);
[native] int GetPlayerFightingStyle([in] int playerid);
[native] bool SetPlayerVelocity([in] int playerid, [in] float x, [in] float y, [in] float z);
[native] bool GetPlayerVelocity([in] int playerid, [out] float x, [out] float y, [out] float z);
[native] bool PlayCrimeReportForPlayer([in] int playerid, [in] int suspectid, [in] int crime);
[native] bool PlayAudioStreamForPlayer([in] int playerid, [in] string url, [in] float posX, [in] float posY, [in] float posZ, [in] float distance, [in] bool usepos);
[native] bool StopAudioStreamForPlayer([in] int playerid);
[native] bool SetPlayerShopName([in] int playerid, [in] string shopname);
[native] bool SetPlayerSkillLevel([in] int playerid, [in] int skill, [in] int level);
[native] int GetPlayerSurfingVehicleID([in] int playerid);
[native] int GetPlayerSurfingObjectID([in] int playerid);
[native] bool RemoveBuildingForPlayer([in] int playerid, [in] int modelid, [in] float fX, [in] float fY, [in] float fZ, [in] float fRadius);

const int MAX_PLAYER_ATTACHED_OBJECTS = 10;

[native] bool SetPlayerAttachedObject([in] int playerid, [in] int index, [in] int modelid, [in] int bone, [in] float fOffsetX, [in] float fOffsetY, [in] float fOffsetZ, [in] float fRotX, [in] float fRotY, [in] float fRotZ, [in] float fScaleX, [in] float fScaleY, [in] float fScaleZ, [in] int materialcolor1, [in] int materialcolor2);
[native] bool RemovePlayerAttachedObject([in] int playerid, [in] int index);
[native] bool IsPlayerAttachedObjectSlotUsed([in] int playerid, [in] int index);
[native] bool EditAttachedObject([in] int playerid, [in] int index);

[native] int CreatePlayerTextDraw([in] int playerid, [in] float x, [in] float y, [in] string text);
[native] bool PlayerTextDrawDestroy([in] int playerid, [in] int text);
[native] bool PlayerTextDrawLetterSize([in] int playerid, [in] int text, [in] float x, [in] float y);
[native] bool PlayerTextDrawTextSize([in] int playerid, [in] int text, [in] float x, [in] float y);
[native] bool PlayerTextDrawAlignment([in] int playerid, [in] int text, [in] int alignment);
[native] bool PlayerTextDrawColor([in] int playerid, [in] int text, [in] int color);
[native] bool PlayerTextDrawUseBox([in] int playerid, [in] int text, [in] bool use);
[native] bool PlayerTextDrawBoxColor([in] int playerid, [in] int text, [in] int color);
[native] bool PlayerTextDrawSetShadow([in] int playerid, [in] int text, [in] int size);
[native] bool PlayerTextDrawSetOutline([in] int playerid, [in] int text, [in] int size);
[native] bool PlayerTextDrawBackgroundColor([in] int playerid, [in] int text, [in] int color);
[native] bool PlayerTextDrawFont([in] int playerid, [in] int text, [in] int font);
[native] bool PlayerTextDrawSetProportional([in] int playerid, [in] int text, [in] bool set);
[native] bool PlayerTextDrawSetSelectable([in] int playerid, [in] int text, [in] bool set);
[native] bool PlayerTextDrawShow([in] int playerid, [in] int text);
[native] bool PlayerTextDrawHide([in] int playerid, [in] int text);
[native] bool PlayerTextDrawSetString([in] int playerid, [in] int text, [in] string string);
[native] bool PlayerTextDrawSetPreviewModel([in] int playerid, [in] int text, [in] int modelindex);
[native] bool PlayerTextDrawSetPreviewRot([in] int playerid, [in] int text, [in] float fRotX, [in] float fRotY, [in] float fRotZ, [in] float fZoom);
[native] bool PlayerTextDrawSetPreviewVehCol([in] int playerid, [in] int text, [in] int color1, [in] int color2);

const int PLAYER_VARTYPE_NONE   = 0;
const int PLAYER_VARTYPE_INT    = 1;
const int PLAYER_VARTYPE_STRING = 2;
const int PLAYER_VARTYPE_FLOAT  = 3;

[native] bool SetPVarInt([in] int playerid, [in] string varname, [in] int value);
[native] int GetPVarInt([in] int playerid, [in] string varname);
[native] bool SetPVarString([in] int playerid, [in] string varname, [in] string value);
[native] bool GetPVarString([in] int playerid, [in] string varname, [out] char value, [in] int size);
[native] bool SetPVarFloat([in] int playerid, [in] string varname, [in] float value);
[native] float GetPVarFloat([in] int playerid, [in] string varname);
[native] bool DeletePVar([in] int playerid, [in] string varname);

[native] int GetPVarsUpperIndex([in] int playerid);
[native] bool GetPVarNameAtIndex([in] int playerid, [in] int index, [out] char varname, [in] int size);
[native] int GetPVarType([in] int playerid, [in] string varname);

const int MAX_CHATBUBBLE_LENGTH = 144;

[native] bool SetPlayerChatBubble([in] int playerid, [in] string text, [in] int color, [in] float drawdistance, [in] int expiretime);

[native] bool PutPlayerInVehicle([in] int playerid, [in] int vehicleid, [in] int seatid);
[native] int GetPlayerVehicleID([in] int playerid);
[native] int GetPlayerVehicleSeat([in] int playerid);
[native] bool RemovePlayerFromVehicle([in] int playerid);
[native] bool TogglePlayerControllable([in] int playerid, [in] bool toggle);
[native] bool PlayerPlaySound([in] int playerid, [in] int soundid, [in] float x, [in] float y, [in] float z);
[native] bool ApplyAnimation([in] int playerid, [in] string animlib, [in] string animname, [in] float fDelta, [in] bool loop, [in] bool lockx, [in] bool locky, [in] bool freeze, [in] int time, [in] bool forcesync);
[native] bool ClearAnimations([in] int playerid, [in] bool forcesync);
[native] int GetPlayerAnimationIndex([in] int playerid);
[native] bool GetAnimationName([in] int index, [out] char animlib, [in] int animlib_size, [out] char animname, [in] int animname_size);
[native] int GetPlayerSpecialAction([in] int playerid);
[native] bool SetPlayerSpecialAction([in] int playerid, [in] int actionid);

[native] bool SetPlayerCheckpoint([in] int playerid, [in] float x, [in] float y, [in] float z, [in] float size);
[native] bool DisablePlayerCheckpoint([in] int playerid);
[native] bool SetPlayerRaceCheckpoint([in] int playerid, [in] int type, [in] float x, [in] float y, [in] float z, [in] float nextx, [in] float nexty, [in] float nextz, [in] float size);
[native] bool DisablePlayerRaceCheckpoint([in] int playerid);
[native] bool SetPlayerWorldBounds([in] int playerid, [in] float x_max, [in] float x_min, [in] float y_max, [in] float y_min);
[native] bool SetPlayerMarkerForPlayer([in] int playerid, [in] int showplayerid, [in] int color);
[native] bool ShowPlayerNameTagForPlayer([in] int playerid, [in] int showplayerid, [in] bool show);

const int MAPICON_LOCAL             = 0;
const int MAPICON_GLOBAL            = 1;
const int MAPICON_LOCAL_CHECKPOINT  = 2;
const int MAPICON_GLOBAL_CHECKPOINT = 3;

[native] bool SetPlayerMapIcon([in] int playerid, [in] int iconid, [in] float x, [in] float y, [in] float z, [in] int markertype, [in] int color, [in] int style);
[native] bool RemovePlayerMapIcon([in] int playerid, [in] int iconid);

[native] bool AllowPlayerTeleport([in] int playerid, [in] bool allow);

const int CAMERA_CUT  = 2;
const int CAMERA_MOVE = 1;

[native] bool SetPlayerCameraPos([in] int playerid, [in] float x, [in] float y, [in] float z);
[native] bool SetPlayerCameraLookAt([in] int playerid, [in] float x, [in] float y, [in] float z, [in] int cut);
[native] bool SetCameraBehindPlayer([in] int playerid);
[native] bool GetPlayerCameraPos([in] int playerid, [out] float x, [out] float y, [out] float z);
[native] bool GetPlayerCameraFrontVector([in] int playerid, [out] float x, [out] float y, [out] float z);
[native] int GetPlayerCameraMode([in] int playerid);
[native] bool AttachCameraToObject([in] int playerid, [in] int objectid);
[native] bool AttachCameraToPlayerObject([in] int playerid, [in] int playerobjectid);
[native] bool InterpolateCameraPos([in] int playerid, [in] float FromX, [in] float FromY, [in] float FromZ, [in] float ToX, [in] float ToY, [in] float ToZ, [in] int time, [in] int cut);
[native] bool InterpolateCameraLookAt([in] int playerid, [in] float FromX, [in] float FromY, [in] float FromZ, [in] float ToX, [in] float ToY, [in] float ToZ, [in] int time, [in] int cut);

[native] bool IsPlayerConnected([in] int playerid);
[native] bool IsPlayerInVehicle([in] int playerid, [in] int vehicleid);
[native] bool IsPlayerInAnyVehicle([in] int playerid);
[native] bool IsPlayerInCheckpoint([in] int playerid);
[native] bool IsPlayerInRaceCheckpoint([in] int playerid);

[native] bool SetPlayerVirtualWorld([in] int playerid, [in] int worldid);
[native] int GetPlayerVirtualWorld([in] int playerid);

[native] bool EnableStuntBonusForPlayer([in] int playerid, [in] bool enable);
[native] bool EnableStuntBonusForAll([in] bool enable);

const int SPECTATE_MODE_NORMAL = 1;
const int SPECTATE_MODE_FIXED  = 2;
const int SPECTATE_MODE_SIDE   = 3;

[native] bool TogglePlayerSpectating([in] int playerid, [in] bool toggle);
[native] bool PlayerSpectatePlayer([in] int playerid, [in] int targetplayerid, [in] int mode);
[native] bool PlayerSpectateVehicle([in] int playerid, [in] int targetvehicleid, [in] int mode);

const int PLAYER_RECORDING_TYPE_NONE   = 0;
const int PLAYER_RECORDING_TYPE_DRIVER = 1;
const int PLAYER_RECORDING_TYPE_ONFOOT = 2;

[native] bool StartRecordingPlayerData([in] int playerid, [in] int recordtype, [in] string recordname);
[native] bool StopRecordingPlayerData([in] int playerid);
